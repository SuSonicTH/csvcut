Usage: csvcut [OPTION]... [FILE]...

filter csv files by column name(s)
With no FILE, or when FILE is -, read standard input.

Options:
     -h, --help               display this help and exit
     -v, --version            display version/license and exit
     -l, --listHeader         print the file header and exit
         --exitCodes          print a list of all exit codes

  input:
     -s, --separator sep        use sep as input field separator
         sep can be one of:
            tab (\t)
            comma (,) {Default}
            semicolon (;)
            pipe (|)

     -q, --quote no             no quouting {default for performance}
     -q, --quote single         use single quouttes (')
     -q, --quote double         use double quoutes (")

     -h, --header               use given heder (field1,field2,...)
     -n, --noHeader             file has no header
         --skipLines list       skip lines numbers in list
                                indices as 0-based, header has zero index
         --inputLimit  lim      limit the input processing to lim lines

  output formats:
     --format csv               csv file for format options see output section
     --format lazyMarkdown      compact markdown table format 
     --format markdown          evenly spaced markdown table format (slower)
     --format lazyJira          compact jira/confluence markup table format
     --format jira              evenly spaced jira/confluence table (slower)
     --format table             evenly spaced console table format (slower)
     --format html              plain html with a table
     --format htmlHandson       html with HandsonTable (sorting, filtering,...)
     --format json              json with array of objects
     --format jsonArray         json with an array of arrays

  output:
     -S, --outputSeparator sep  use sep as input field separator
         sep can be one of:
            tab (\t)
            comma (,) {Default}
            semicolon (;)
            pipe (|)

     -q, --outputQuote  quo     quo is the quoting to use
         quo can be one of:
            no (default no quouting)
            single (')
            double (")

     -N, --outputNoHeader      don't write header to output
         
         --outputLimit lim     limit the the number of lines outputted to lim

  processing:
     -I, --include             comma separated list of field names/indices 
                               use bashlash to escape numeric field names
                               can be used multiple times

         --filter              list of filters that are applied
                               argument field1=value1,field2=value2,....

         --trim                removes space & tab characters from start & end
         --unique              only output unique lines
                               check is applied after other processings
         --count               like --unique but adds a count column
